name: publish

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

env:
  DOCKER_IMAGE_1: poison-db:latest
  DOCKER_IMAGE_2: poison-wordpress:latest
  DOCKER_FILE_1: Dockerfile_db
  DOCKER_FILE_2: Dockerfile_wordpress
  DOCKER_CONTAINER_1: mysql_wordpress_poison
  DOCKER_CONTAINER_2: wordpress_poison
  DOCKER_CONTAINER_3: phpmyadmin_wordpress_poison
  DOCKER_VOLUME_1: poison_db_data
  DOCKER_VOLUME_2: poison_wordpress_data
  PORT_1: 8004
  PORT_2: 8005
  PORT_3: 9001
  NGINX_LOCATION_1: /poison/
  NGINX_LOCATION_2: /poison-phpmyadmin/
  NGINX_CONF_FILE: /etc/nginx/sites-available/default

jobs:
  create-docker-images:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the code
        uses: actions/checkout@v4

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.TOKEN_CD }}

      - name: Build image
        run: |
          docker build -f $DOCKER_FILE_1 --tag ghcr.io/carlosmaroto-daweb/$DOCKER_IMAGE_1 .
          docker push ghcr.io/carlosmaroto-daweb/$DOCKER_IMAGE_1
          docker build -f $DOCKER_FILE_2 --tag ghcr.io/carlosmaroto-daweb/$DOCKER_IMAGE_2 .
          docker push ghcr.io/carlosmaroto-daweb/$DOCKER_IMAGE_2
  
  deploy:
    needs: create-docker-images
    runs-on: ubuntu-latest
    steps:
      - name: SSH into Server
        run: |
          echo "${{ secrets.AUTH_PASS }}" > mi_clave.pem
          chmod 600 mi_clave.pem
          ssh -i mi_clave.pem -o StrictHostKeyChecking=no ${{ secrets.AUTH_SERVER }} << EOF
            sudo echo '
              version: "3.1"
              services:
                db:
                  container_name: $DOCKER_CONTAINER_1
                  image: ghcr.io/carlosmaroto-daweb/$DOCKER_IMAGE_1
                  ports: 
                    - "$PORT_3:3306"
                  environment:
                    MYSQL_DATABASE: wordpress
                    MYSQL_USER: admin
                    MYSQL_PASSWORD: admin
                    MYSQL_ROOT_PASSWORD: root
                  volumes:
                    - $DOCKER_VOLUME_1:/var/lib/mysql
                  mem_limit: 512m
                wordpress:
                  container_name: $DOCKER_CONTAINER_2
                  image: ghcr.io/carlosmaroto-daweb/$DOCKER_IMAGE_2
                  ports: 
                    - "$PORT_1:80"
                  environment:
                    WORDPRESS_DB_HOST: db:3306
                    WORDPRESS_DB_USER: admin
                    WORDPRESS_DB_PASSWORD: admin
                    WORDPRESS_DB_NAME: wordpress
                  volumes:
                    - $DOCKER_VOLUME_2:/var/www/html
                phpmyadmin:
                  container_name: $DOCKER_CONTAINER_3
                  image: phpmyadmin/phpmyadmin
                  links: 
                    - db:db
                  ports:
                    - $PORT_2:80
                  environment:
                    MYSQL_USER: admin
                    MYSQL_PASSWORD: admin
                    MYSQL_ROOT_PASSWORD: root
              volumes:
                $DOCKER_VOLUME_1:
                $DOCKER_VOLUME_2:
            ' >> docker-compose.yml
            sudo docker compose down
            sudo docker volume rm $(sudo docker volume ls -q | grep "$DOCKER_VOLUME_1")
            sudo docker volume rm $(sudo docker volume ls -q | grep "$DOCKER_VOLUME_2")
            sudo docker login ghcr.io -u carlosmaroto-daweb -p ${{ secrets.TOKEN_CD }}
            sudo docker pull ghcr.io/carlosmaroto-daweb/$DOCKER_IMAGE_1
            sudo docker pull ghcr.io/carlosmaroto-daweb/$DOCKER_IMAGE_2
            sudo docker compose up -d
            sudo rm docker-compose.yml
            sudo bash update_nginx_config.sh $NGINX_LOCATION_1 $NGINX_CONF_FILE $PORT_1
            sudo bash update_nginx_config.sh $NGINX_LOCATION_2 $NGINX_CONF_FILE $PORT_2
          EOF